box:
  id: node
  tag: 6.9.5
  ports:
    - '80'
    - '35729'

dev:
  steps:
    - script:
        name: check local environment
        code: |
          [[ -f ENVIRONMENT_LOCAL || "$(cat ENVIRONMENT_LOCAL.template | xargs)" == "" ]] || ( echo "No ENVIRONMENT_LOCAL present, please create one based on ENVIRONMENT_LOCAL.template" && exit 1 )
        cwd: $WERCKER_ROOT
    - npm-install:
        name: install node dependencies
        options: --no-optional
    - script:
        name: adding tools
        code: |
          ln -s "$WERCKER_ROOT/tools/log" /usr/bin/log
          ln -s "$WERCKER_ROOT/tools/reload" /usr/bin/reload
          ln -s "$WERCKER_ROOT/tools/_colours" /usr/bin/_colours
          ln -s "$WERCKER_ROOT/tools/reload" /usr/bin/restart
    - script:
        name: run
        code: |
          touch /var/log/build.log
          touch /var/log/express.log
          npm run watch >> /var/log/build.log 2>&1 &
          npm start >> /var/log/express.log 2>&1 &
    - internal/shell:
        code: |
          stty columns $TERMINAL_COLUMNS
          stty rows $TERMINAL_ROWS
          log

build:
  steps:
    - npm-install:
        name: install node development dependencies
        options: --no-optional --only=dev
        cwd: $WERCKER_ROOT/src
    - script:
        name: build
        code: npm run build
        cwd: $WERCKER_ROOT/src
    # - npm-test:
    #     name: run tests
    #     cwd: $WERCKER_ROOT/src
    # - script:
    #     name: run webpack
    #     code: npm run webpack -- -p
    #     cwd: $WERCKER_ROOT/src
    - script:
        name: export the built application
        code: |
          cp -r built "$WERCKER_OUTPUT_DIR"
          cp -r index.js "$WERCKER_OUTPUT_DIR"
          cp -r package.json "$WERCKER_OUTPUT_DIR"
        cwd: $WERCKER_ROOT/src
    - npm-install:
        name: install node production dependencies
        options: --no-optional --only=production
        cwd: "$WERCKER_OUTPUT_DIR"

docker-push:
  steps:
    - internal/docker-push:
        username: $DOCKER_REGISTRY_USERNAME
        password: $DOCKER_REGISTRY_PASSWORD
        tag: $WERCKER_GIT_COMMIT
        repository: $DOCKER_REGISTRY_REPO
        registry: $DOCKER_REGISTRY
        working-dir: $WERCKER_ROOT
        cmd: npm run production
        ports: "80"
